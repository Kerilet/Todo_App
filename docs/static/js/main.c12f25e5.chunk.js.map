{"version":3,"sources":["App.module.css","Components/Filters/style.module.css","Components/Checkbox/style.module.css","Components/TodoList/style.module.css","context.jsx","Components/Checkbox/index.jsx","Components/Filters/index.jsx","Components/TodoList/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Context","createContext","ctx","children","useState","theme","setTheme","title","completed","order","todos","setTodos","getTotal","useMemo","length","values","toggleTheme","addTodo","todo","newTodos","push","Provider","value","c","className","style","todoCheckbox","todoCheckboxFill","useContext","filters","href","active","themeIndicator","todoList","map","taskName","App","todoInfo","setTodoInfo","join","mainContainer","todoHeader","todoTitle","src","alt","sunDesktop","todoInput","onSubmit","ev","preventDefault","type","onChange","target","listNOptions","TodoList","optionsContainer","totalItems","Filters","clearAll","dragDrop","attribution","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c12f25e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"mainContainer\":\"App_mainContainer__2o5r7\",\"todoHeader\":\"App_todoHeader__CMZmp\",\"todoTitle\":\"App_todoTitle__2087v\",\"sunDesktop\":\"App_sunDesktop__39Goi\",\"App-link\":\"App_App-link__3FsH9\",\"todoInput\":\"App_todoInput__L5a12\",\"submitInput\":\"App_submitInput__2ci3m\",\"optionsContainer\":\"App_optionsContainer__3hktT\",\"listNOptions\":\"App_listNOptions__19asW\",\"dragDrop\":\"App_dragDrop__1nPKJ\",\"attribution\":\"App_attribution__1Q091\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters\":\"style_filters__AN364\",\"active\":\"style_active__1CqWy\",\"themeIndicator\":\"style_themeIndicator__2agK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoCheckbox\":\"style_todoCheckbox__2l9XZ\",\"todoCheckboxFill\":\"style_todoCheckboxFill__1QsZv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"style_todoList__K62mv\",\"taskName\":\"style_taskName__2yebn\"};","/* eslint-disable react/jsx-no-constructed-context-values */\nimport React, { createContext, useState, useMemo } from 'react';\n\nexport const Context = createContext();\n\nexport default function ctx({ children }) {\n  // Theme\n  const [theme, setTheme] = useState('dark');\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  // Todos\n  const [todos, setTodos] = useState([{ title: 'Todo 1', completed: false, order: 1 }]);\n\n  const addTodo = (title) => {\n    const todo = {\n      title,\n      completed: false,\n      order: todos.length + 1,\n    };\n    const newTodos = [...todos];\n    newTodos.push(todo);\n    setTodos(newTodos);\n  };\n\n  const getTotal = useMemo(() => todos.length);\n\n  const values = {\n    theme, toggleTheme, todos, addTodo, getTotal,\n  };\n\n  return (\n    <Context.Provider value={values}>\n      {children}\n    </Context.Provider>\n  );\n}\n","import React from 'react';\nimport style from './style.module.css';\n\nexport default function c() {\n  return (\n    <div className={style.todoCheckbox}>\n      <div className={style.todoCheckboxFill} />\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Context } from '../../context';\nimport style from './style.module.css';\n\nexport default () => {\n  const { theme } = useContext(Context);\n  return (\n    <ul className={style.filters}>\n      <li>\n        <a href=\"javascript;\" className={style.active}>\n          All\n        </a>\n      </li>\n      <li><a href=\"javascript;\">Active</a></li>\n      <li><a href=\"javascript;\">Completed</a></li>\n      <div className={style.themeIndicator}>{theme}</div>\n    </ul>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Context } from '../../context';\nimport style from './style.module.css';\nimport Checkbox from '../Checkbox';\n\nexport default () => {\n  const { todos } = useContext(Context);\n\n  return (\n    <div className={style.todoList}>\n      <ul>\n        {todos.map((todo) => (\n          <li>\n            <Checkbox />\n            <div className={style.taskName}>{todo.title}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\n/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\n/* eslint-disable func-names */\nimport React, { useContext, useState } from 'react';\nimport { Context } from './context';\nimport Checkbox from './Components/Checkbox';\nimport style from './App.module.css';\nimport Filters from './Components/Filters';\nimport TodoList from './Components/TodoList';\n\nconst App = function () {\n  const {\n    theme, addTodo, getTotal,\n  } = useContext(Context);\n  const [todoInfo, setTodoInfo] = useState('');\n\n  const changeTodo = (ev) => {\n    ev.preventDefault();\n    const { value } = ev.target;\n    setTodoInfo(value);\n  };\n\n  const submitTodo = (ev) => {\n    ev.preventDefault();\n    if (todoInfo) {\n      addTodo(todoInfo);\n      setTodoInfo('');\n    }\n  };\n\n  return (\n    <div className={[style.App, theme].join(' ')}>\n      <div className={style.mainContainer}>\n\n        <div className={style.todoHeader}>\n          <div className={style.todoTitle}>T O D O</div>\n          <div>\n            <img src=\"./icon-sun.svg\" alt=\"desktop-sun\" className={style.sunDesktop} />\n            {' '}\n          </div>\n        </div>\n\n        <div className={style.todoInput}>\n          <form onSubmit={submitTodo}>\n            <Checkbox />\n            <input type=\"text\" onChange={changeTodo} value={todoInfo} />\n          </form>\n        </div>\n        <div className={style.listNOptions}>\n          <div>\n            <TodoList />\n          </div>\n\n          <div className={style.optionsContainer}>\n            <div className={style.totalItems}>\n              {getTotal}\n              {' '}\n              items left\n            </div>\n            <Filters />\n            <div className={style.clearAll}>Clear Completed</div>\n          </div>\n        </div>\n      </div>\n      <div className={style.dragDrop}>Drag and drop to reorder list</div>\n      {/* <div>{theme}</div>\n      <div><button type=\"button\" onClick={toggleTheme}>Toggle theme</button></div>\n      // eslint-disable-next-line max-len\n      <div><button type=\"button\" onClick={() => addTodo(`Todo number ${getTotal}`)}>Add todo</button></div> */}\n\n      <div className={style.attribution}>\n        Challenge by\n        {' '}\n        <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\" rel=\"noreferrer\">Frontend Mentor</a>\n        .\n        Coded by Kerilet.\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Provider from './context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}